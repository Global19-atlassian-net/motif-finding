%% Copyright (c) 2011, Pacific Biosciences of California, Inc.

%% All rights reserved.

%% Redistribution and use in source and binary forms, with or without
%% modification, are permitted provided that the following conditions are
%% met: 

%% * Redistributions of source code must retain the above copyright
%% notice, this list of conditions and the following disclaimer.

%% * Redistributions in binary form must reproduce the above copyright
%% notice, this list of conditions and the following disclaimer in the
%% documentation and/or other materials provided with the distribution.

%% * Neither the name of Pacific Biosciences nor the names of its
%% contributors may be used to endorse or promote products derived from
%% this software without specific prior written permission.

%% THIS SOFTWARE IS PROVIDED BY PACIFIC BIOSCIENCES AND ITS CONTRIBUTORS
%% "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
%% LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
%% A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL PACIFIC
%% BIOSCIENCES OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
%% INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
%% BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
%% OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
%% ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
%% TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
%% USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
%% DAMAGE.
\documentclass[letterpaper,12pt]{article}

%%%%%%%%%%%%%%%%%%%%%%%% Standard Packages %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\usepackage{epsfig}
%\usepackage{graphicx}
%\usepackage{graphics}
%\usepackage{amssymb}
%\usepackage{amsmath}
%\usepackage{fancyvrb}
%\usepackage{comment}
%\usepackage{fancyhdr}
\usepackage{color}
%\usepackage{amsfonts}
%\usepackage{float}
%\usepackage{subfig}
\usepackage{hyperref}

\usepackage{amsmath}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage[utf8]{inputenc}


%%%%%%%%%%%%%%%%%%%%%%%% Adapted from Sweave %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\DefineVerbatimEnvironment{Rcode}{Verbatim}{fontshape=sl, frame=single, 
%  framesep=2mm, fontsize=\small, baselinestretch=.5}

%%%%%%%%%%%%%%%%%%%%%%%% Page and Document Setup %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\addtolength{\oddsidemargin}{-0.875in}
\addtolength{\topmargin}{-0.875in}
\addtolength{\textwidth}{1.75in}
\addtolength{\textheight}{1.75in}

%\renewcommand{\topfraction}{0.9}        % max fraction of floats at top
%\renewcommand{\bottomfraction}{0.8}     % max fraction of floats at bottom

% Parameters for TEXT pages (not float pages):
%\setcounter{topnumber}{2}
%\setcounter{bottomnumber}{2}
%\setcounter{totalnumber}{4}             % 2 may work better
%\setcounter{dbltopnumber}{2}            % for 2-column pages
%\renewcommand{\dbltopfraction}{0.9}     % fit big float above 2-col. text
%\renewcommand{\textfraction}{0.07}      % allow minimal text w. figs

% Parameters for FLOAT pages (not text pages):
%\renewcommand{\floatpagefraction}{0.7}          % require fuller float pages

% N.B.: floatpagefraction MUST be less than topfraction !!
%\renewcommand{\dblfloatpagefraction}{0.7}       % require fuller float pages


%\def\argmax{\operatornamewithlimits{arg\,max}}
%\def\argmin{\operatornamewithlimits{arg\,min}}

\definecolor{myblue}{rgb}{0.25, 0, 0.75}
\definecolor{mygold}{rgb}{1,0.8,0.2}


\definecolor{gray}{rgb}{0.5, 0.5, 0.5}

\newcommand{\myurl}[1]{\href{http://#1}{\textcolor{gray}{\texttt{#1}}}}
\newcommand{\myem}[1]{\structure{#1}}
\newcommand{\myurlshort}[2]{\href{http://#1}{\textcolor{gray}{\textsf{#2}}}}

\newcommand{\RPackage}[1]{\textcolor{gray}{\textsf{#1}}}
\newcommand{\PL}[1]{\texttt{#1}}
\newcommand{\RCode}[1]{\texttt{#1}}
\newcommand{\RFunction}[1]{\textsf{#1}}
\newcommand{\RClass}[1]{\textcolor{mygold}{\textsf{#1}}}
\newcommand{\BIOCfunction}[1]{\textcolor{orange}{#1}}

%%%%%%%%%%%%%%%%%%%%%%% options for sweave %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\SweaveOpts{prefix.string=plots/plots, eps=FALSE, echo=FALSE}

%\documentclass{article}


\begin{document}

\title{A Modification Motif Analysis Demo}
\author{Pat Marks}
\maketitle

\section {Getting started}
We demonstrate a typical analysis of kinetic modification detection data on a bacterial genome.  The main steps in the analysis are: load and quality check the modification calls, find commonly methylated sequence motifs, and find the motifs in the genome sequence. 


We install some packages from bioconductor:
<<init>>=
# Uncomment to install 'cosmo' package from bioconductor
#source("http://bioconductor.org/biocLite.R")
#biocLite("cosmo")
#biocLite("rtracklayer")
@

We start by loading some utilities:
<<libs>>=
library(ggplot2)
library(plyr)
library(Biostrings)
library(cosmo)
source('scripts.R')
@


\section{Loading modification data}

We start by loading the raw modifications calls from that are produced by SMRTPortal in \verb@modifications.gff.gz@. This can be downloaded from the job results page in SMRTPortal, or accessed directly from the SMRTportal job folder on the file server.  The included \PL{R} script contains a \PL{GFF} file reader that extracts some extra atrribute columns used by the modification detection tool. Take a look at the data contained in the \PL{GFF} file. The context field contains a 41 base context centered around  the detected modification -- we pull out the center base (position 21). Look at the summary of the detected hits. Confident m6A detection requires coverage >20x (per strand). See 


<<gff>>=
# Load GFF file
gffFile <- '/mnt/secondary/Smrtanalysis/userdata/jobs/040/040041/data/modifications.gff.gz'
hits <- readModificationsGff(gffFile)
head(hits)

hits$CognateBase <- substr(hits$context, 21, 21)
summary(hits)

# Subset the hits for faster plotting
hitsSubset <- hits[sample(nrow(hits), min(nrow(hits), 50e3)),]
@


\begin{table}[ht]
\begin{center}
\begin{tabular}{ll}
\hline
Column & Description \\
\hline
seqid  &  	Reference tag (e.g. ref00001) \\
source	&	  Name of tool -- 'kinModCall' \\
type    &   Modification type -- currently we use a generic tag "modified\_base" \\
start   &   Location of modification \\
end     &   Location of modification plus one \\
score   &   Phred transformed p-value of detection \\
strand  &   Sample strand containing modification \\
phase   &   Not applicable \\
\hline
attributes &  Fields below are packed in the \PL{GFF} attributes column \\
IPDRatio & Ratio between IPD of observed IPD to IPD of unmodified DNA (from control sample or in-silico reference) \\
context &  Reference sequence -20bp to +20bp around start, converted to current strand \\
coverage & Number of valid IPD observations at this site \\
\hline
\end{tabular}
\caption{Contents of modifications.gff.gz file}
\end{center}
\end{table}

We now make some plots from the \PL{GFF} data to assess the quality and type of the modification calls. Figure~\ref{fig:pp1} shows a histogram of the scores of the GFF entries, coloured by the cognate base.  This will give you a sense of how strong your signals are and whether the strongest signals are enriched on any base. For our E.Coli test genome the predominant modification is 6-methyl adenosine, so most of the significant modification detections are at A positions.

\begin{figure}
\begin{center}
<<label=pp1,fig=TRUE,echo=TRUE>>=
p <- qplot(score, colour=CognateBase, geom='freqpoly', data=hits)
show(p)
@
\end{center}
\caption{Modification Scores by cognate base}
\label{fig:pp1}
\end{figure}


\begin{figure}
\begin{center}
<<label=pp2,fig=TRUE,echo=TRUE>>=
p <- qplot(coverage, score, colour=CognateBase, alpha=I(0.3), data=hitsSubset)
show(p)
@
\end{center}
\caption{Score vs. Coverage}
\label{fig:pp2}
\end{figure}


The histogram in Figure~\ref{fig:pp1} indicates that the interesting A bases have a score cutoff of roughly 45.  We select these hits, then sort in decreasing order of score, so we consider the strongest signal first.

<<filter>>=
goodHits <- subset(hits, score > 45)
goodHits <- goodHits[order(goodHits$score, decreasing=T),]
workHits <- goodHits
@

\section{Motif Finding}

We use the motif finding package \PL{cosmo} (\myurl{http://www.bioconductor.org/packages/release/bioc/html/cosmo.html}) to search for conserved motifs in the DNA sequences surrounding our modification detections.  First, we convert the context snippets into a cosmo compatible format. Next, we select a small number of hits to pass to \PL{cosmo} (it will not return if you provide too many at once). We feed the contexts to cosmo, then look at the resulting logo plot. We found 'GATC', starting at position 21-2 = 19

<<motif>>=
sequenceList <- llply(workHits$context, function(x) list(seq=as.character(x), desc=''))
smallHitList <- sequenceList[1:200]

cc2 <- cosmo(seqs=smallHitList,minW=4, maxW=10, revComp=F, silent=T)

motif <- 'GATC'
position <- 20
@

View the logo plot (Figure~\ref{fig:logo})

\begin{figure}
\begin{center}
<<label=logo,fig=TRUE,echo=TRUE>>=
plot(cc2)
@
\end{center}
\caption{Logo plot}
\label{fig:logo}
\end{figure}

We found 'GATC', starting at position 21-1 = 20. Pull out the -2 to +1 context window from the hits contexts. How many hits do we get with this motif. Roughly how many would we expect if everything was methylated in a random genome. We see the correct number of hits!  We are now done with 'CTATG'. Remove the 'CTATG' hits from working list and try again. We still haev lots of unidentified motifs

<<motif>>=
motif <- 'GATC'
position <- 20
snip <- substr(workHits$context, position, position + nchar(motif) - 1)
observedHits <- sum(motif == snip)
observedHits
genomeSize <- max(hits$end)
expectedHits <- genomeSize / (4^nchar(motif))
expectedHits
workHits <- workHits[snip != motif,]
nrow(workHits)
@

Not clear what's happening now -- we probably have a mixture of motifs in similar proportion which will confuse cosmo.  Continue on by hand, or wait for the fancy new motif finder!


\section{Genome Annotation}
We can load the genome sequence and annotate it instances of each motif, to determine the genome-wide methylation fraction of our motifs.

<<annotate>>=
# Load the genome sequence
seq_path <- '/mnt/secondary/Smrtanalysis/userdata/references/ecoli/sequence/ecoli.fasta'
dna_seq <- read.DNAStringSet(seq_path)

motifs = c('GATC', 'GCACNNNNNNGTT', 'AACNNNNNNGTGC')
positions = c(2, 3, 2)

motifAnnotations <- annotationDf(dna_seq, motifs, positions)
head(motifAnnotations)

table(motifAnnotations$mod)
@


\section{Appendix}

\PL{R} can be downloaded for Linux, Mac and Windows from \myurl{http://r-project.org}
We also recommend the graphical front-end \PL{RStudio}, available from \myurl{rstudio.org}

The following R packages need to be installed to run through this demo.
\RPackage{ggplot2} (available on CRAN), \RPackage{cosmo}, \RPackage{Biostrings} (available on Bioconductor)


\end{document}